#
# Warning: do not edit by hand, this file was generated by Heroics:
#
#   https://github.com/heroku/heroics
#

module <%= @module_name %>
  # Get a Client configured to use username and password.
  def self.connect(username, password)
    url = '<%= @url %>'.sub('USERNAME', username).sub('PASSWORD', password)
    Client.new(url)
  end

  # <%= @description %>
  class Client
    def initialize(url)
      <% if @accept_header %>
      default_headers {'Accept' => '<%= @accept_header %>'}
      <% else %>
      default_headers = {}
      <% end %>
      options = {options: {default_headers: default_headers}}
      @client = Heroics.client_from_schema(SCHEMA, url, options)
    end
    <% for resource in @resources %>

    # <%= resource.description %>
    def <%= resource.name %>
      @<%= resource.name %>_resource ||= <%= resource.class_name %>.new(@client)
    end
    <% end %>
  end

  private
  <% for resource in @resources %>

  # <%= resource.description %>
  class <%= resource.class_name %>
    def initialize(client)
      @client = client
    end
    <% for link in resource.links %>

    # <%= link.description %>
    <% unless link.parameters.empty? %>
    #
    <% for info in link.parameters %>
    # @param <%= info[:name] %>: <%= info[:description] %>
    <% end %>
    <% end %>
    def <%= link.name %>(<%= link.parameter_names %>)
      @client.<%= resource.name %>.<%= link.name %>(<%= link.parameter_names %>)
    end
    <% end %>
  end
  <% end %>

  SCHEMA = Heroics::Schema.new(MultiJson.decode(<<-HEROICS_SCHEMA))
<%= @schema %>
HEROICS_SCHEMA
end
